@model Lr11_13.Models.Постановка

@{
    ViewBag.Title = "Edit";
}

<h2>Редактирование</h2>


@using (Html.BeginForm(Html.BeginForm("Edit","Postanovka",null,FormMethod.Post,new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Постановка</h4>
    <hr />
    @Html.ValidationSummary(true,"",new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id_постановки)

    <div class="form-group">
        @Html.LabelFor(model => model.Название_постановки, "Название постановки",htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Название_постановки,new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Название_постановки,"",new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Описание,htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Описание,new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Описание,"",new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Длительность_постановки,"Длительность постановки",htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Длительность_постановки,new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Длительность_постановки,"",new { @class = "text-danger" })
        </div>
    </div>
    <div class="editor-label">Фото</div>
    <div class="editor-field">
        @if(Model.Постер == null)
        {
            @:None
        }
        else
        {
            byte[] photo = Model.Постер;
            string imageSrc = null;
            if(photo != null)
            {
                MemoryStream ms = new MemoryStream();
                ms.Write(photo,0,photo.Length);
                string imageBase64 = Convert.ToBase64String(ms.ToArray());
                imageSrc = string.Format("data:image/jpg;base64,{0}",imageBase64);
                string base64String = Convert.ToBase64String(photo,0,photo.Length);
            }

            <img width="150" height="200" src="@imageSrc" />
        }
        <div>Выбрать новую фотографию: <input type="file" name="upload" /></div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Сохранить" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Вернуться к списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
